<!--
  ~ This file is part of "SAP Commerce Developers Toolset" plugin for Intellij IDEA.
  ~ Copyright (C) 2023 EPAM Systems <hybrisideaplugin@epam.com>
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Lesser General Public License as
  ~ published by the Free Software Foundation, either version 3 of the
  ~ License, or (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Lesser General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Lesser General Public License
  ~ along with this program. If not, see <http://www.gnu.org/licenses/>.
  -->

<idea-plugin>

    <applicationListeners>
        <listener class="com.intellij.idea.plugin.hybris.vfs.listeners.TSBulkFileListener"
                  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
        <listener class="com.intellij.idea.plugin.hybris.vfs.listeners.BSBulkFileListener"
                  topic="com.intellij.openapi.vfs.newvfs.BulkFileListener"/>
    </applicationListeners>

    <projectListeners>
        <listener class="com.intellij.idea.plugin.hybris.startup.event.ItemsXmlFileEditorManagerListener"
                  topic="com.intellij.openapi.fileEditor.FileEditorManagerListener"/>
        <listener class="com.intellij.idea.plugin.hybris.startup.event.HybrisConsoleProjectManagerListener"
                  topic="com.intellij.openapi.project.ProjectManagerListener"/>
    </projectListeners>

    <extensions defaultExtensionNs="JavaScript.JsonSchema">
        <ProviderFactory
                implementation="com.intellij.idea.plugin.hybris.system.manifest.jsonSchema.ManifestJsonSchemaProviderFactory"/>
    </extensions>

    <extensions defaultExtensionNs="com.intellij">
        <lang.foldingBuilder language="XML" implementationClass="com.intellij.idea.plugin.hybris.system.type.lang.folding.ItemsXmlFoldingBuilder"/>
        <lang.foldingBuilder language="XML" implementationClass="com.intellij.idea.plugin.hybris.system.cockpitng.lang.folding.CngConfigFoldingBuilder"/>

        <!-- ####################################################################################################### -->
        <!--                                        Project Properties                                                 -->
        <!-- ####################################################################################################### -->
        <projectService serviceInterface="com.intellij.idea.plugin.hybris.properties.PropertiesService"
                        serviceImplementation="com.intellij.idea.plugin.hybris.properties.impl.PropertiesServiceImpl"/>

        <!-- ####################################################################################################### -->
        <!--                                        Run Contributors                                                 -->
        <!-- ####################################################################################################### -->
        <runLineMarkerContributor language="XML"
                                  implementationClass="com.intellij.idea.plugin.hybris.execution.lineMarker.RefreshProjectRunLineMarkerContributor"/>

        <!-- ####################################################################################################### -->
        <!--                                        Completion Providers                                             -->
        <!-- ####################################################################################################### -->
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.codeInsight.completion.provider.ItemTypeCodeCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.codeInsight.completion.provider.ItemCodeCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.codeInsight.completion.provider.ExtensionNameCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.codeInsight.completion.provider.RequiredExtensionsNameCompletionProvider"/>

        <!-- ####################################################################################################### -->
        <!--                                            Facet                                                        -->
        <!-- ####################################################################################################### -->
        
        <facetType implementation="com.intellij.idea.plugin.hybris.facet.YFacetType"/>
        <applicationService serviceImplementation="com.intellij.idea.plugin.hybris.project.configurators.impl.YFacetConfigurator"/>

        <!-- ####################################################################################################### -->
        <!--                                            CCv2 manifest.json                                           -->
        <!-- ####################################################################################################### -->

        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.manifest.codeInsight.completion.provider.ExtensionPackNameCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.manifest.codeInsight.completion.provider.TemplateExtensionNameCompletionProvider"/>

        <completion.contributor language="JSON" id="CCv2ManifestCompletionContributor"
                                implementationClass="com.intellij.idea.plugin.hybris.system.manifest.codeInsight.completion.ManifestJsonCompletionProvider"/>
        <projectService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.manifest.jsonSchema.providers.ManifestCommerceJsonSchemaFileProvider"/>
        <projectService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.manifest.jsonSchema.providers.ManifestDataHubJsonSchemaFileProvider"/>
        <projectService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.manifest.jsonSchema.providers.ManifestJavascriptStorefrontJsonSchemaFileProvider"/>

        <!-- ####################################################################################################### -->
        <!--                                            Business Process                                             -->
        <!-- ####################################################################################################### -->
        <dom.fileMetaData rootTagName="process" stubVersion="2"
                          implementation="com.intellij.idea.plugin.hybris.system.businessProcess.BpDomFileDescription"/>

        <!-- ####################################################################################################### -->
        <!--                                            ExtensionInfo                                                -->
        <!-- ####################################################################################################### -->
        <dom.fileMetaData rootTagName="extensioninfo" stubVersion="1"
                          implementation="com.intellij.idea.plugin.hybris.system.extensioninfo.EiSDomFileDescription"/>

        <completion.contributor language="XML"
                                implementationClass="com.intellij.idea.plugin.hybris.system.extensioninfo.codeInsight.completion.ExtensionInfoCompletionContributor"/>

        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.intellij.idea.plugin.hybris.system.extensioninfo.codeInsight.daemon.EiSExtensionLineMarkerProvider"/>

        <!-- ####################################################################################################### -->
        <!--                                            External Dependencies                                        -->
        <!-- ####################################################################################################### -->
        <dom.fileMetaData rootTagName="project" stubVersion="1" order="first"
                          implementation="com.intellij.idea.plugin.hybris.system.externalDependencies.EDDomFileDescription"/>

        <!-- ####################################################################################################### -->
        <!--                                            LocalExtensions                                              -->
        <!-- ####################################################################################################### -->
        <dom.fileMetaData rootTagName="hybrisconfig" stubVersion="1"
                          implementation="com.intellij.idea.plugin.hybris.system.localextensions.LeSDomFileDescription"/>

        <completion.contributor language="XML"
                                implementationClass="com.intellij.idea.plugin.hybris.system.localextensions.codeInsight.completion.LocalExtensionsCompletionContributor"/>

        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.intellij.idea.plugin.hybris.system.localextensions.codeInsight.daemon.LeSExtensionLineMarkerProvider"/>

        <!-- ####################################################################################################### -->
        <!--                                            Cockpit NG                                                   -->
        <!-- ####################################################################################################### -->
        <dom.extender domClass="com.intellij.idea.plugin.hybris.system.cockpitng.model.config.Context"
                      extenderClass="com.intellij.idea.plugin.hybris.system.cockpitng.CngConfigDomExtender"/>
        <dom.fileMetaData rootTagName="config" stubVersion="3"
                          implementation="com.intellij.idea.plugin.hybris.system.cockpitng.CngConfigDomFileDescription"/>
        <dom.fileMetaData rootTagName="widgets" stubVersion="3"
                          implementation="com.intellij.idea.plugin.hybris.system.cockpitng.CngWidgetsDomFileDescription"/>
        <dom.fileMetaData rootTagName="action-definition" stubVersion="3"
                          implementation="com.intellij.idea.plugin.hybris.system.cockpitng.CngActionDefinitionDomFileDescription"/>
        <dom.fileMetaData rootTagName="widget-definition" stubVersion="3"
                          implementation="com.intellij.idea.plugin.hybris.system.cockpitng.CngWidgetDefinitionDomFileDescription"/>
        <dom.fileMetaData rootTagName="editor-definition" stubVersion="3"
                          implementation="com.intellij.idea.plugin.hybris.system.cockpitng.CngEditorDefinitionDomFileDescription"/>

        <completion.contributor language="XML"
                                implementationClass="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.CngCompletionContributor"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngContextParentNonItemTypeCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngFlowItemTypeCodeCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngItemAttributeCodeCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngFlowItemAttributeCodeCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngEditorDefinitionCodeCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngActionDefinitionCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngWidgetDefinitionCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngWidgetIdCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngWidgetSettingCompletionProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.codeInsight.completion.provider.CngWidgetConnectionWidgetIdCompletionProvider"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.cockpitng.meta.CngMetaModelAccess"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.meta.impl.CngMetaModelAccessImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.cockpitng.meta.CngMetaModelCollector"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.meta.impl.CngMetaModelCollectorImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.cockpitng.meta.CngMetaModelMerger"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.meta.impl.CngMetaModelMergerImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.cockpitng.meta.CngMetaModelProcessor"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.cockpitng.meta.impl.CngMetaModelProcessorImpl"/>

        <!-- ####################################################################################################### -->
        <!--                                            Type System                                                  -->
        <!-- ####################################################################################################### -->

        <dom.fileMetaData rootTagName="items" stubVersion="22"
                          implementation="com.intellij.idea.plugin.hybris.system.type.file.TSDomFileDescription"/>

        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.daemon.ItemsXmlItemAlternativeDeclarationsLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.daemon.ItemsXmlItemSiblingsLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.daemon.ItemsXmlEnumAlternativeDeclarationsLineMarkerProvider"/>

        <completion.contributor language="XML"
                                implementationClass="com.intellij.idea.plugin.hybris.system.type.codeInsight.completion.TSCompletionContributor"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.type.codeInsight.completion.provider.TSAttributeDeclarationCompletionProvider"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.type.meta.TSMetaModelAccess"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.type.meta.impl.TSMetaModelAccessImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.type.meta.TSMetaModelProcessor"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.type.meta.impl.TSMetaModelProcessorImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.type.meta.TSMetaModelCollector"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.type.meta.impl.TSMetaModelCollectorImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.type.meta.TSMetaModelMerger"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.type.meta.impl.TSMetaModelMergerImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.type.meta.TSMetaItemService"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.type.meta.impl.TSMetaItemServiceImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.type.validation.ItemsXmlFileValidation"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.type.validation.impl.ItemsFileValidation"/>

        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.type.validation.impl.RelationValidation"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.type.validation.impl.EnumTypeClassValidation"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.type.validation.impl.ItemTypeClassValidation"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.type.psi.provider.TSItemAttributeReferenceProvider"/>
        <applicationService
                serviceImplementation="com.intellij.idea.plugin.hybris.system.type.psi.provider.TSItemReferenceProvider"/>

        <xmlStructureViewBuilderProvider
                implementation="com.intellij.idea.plugin.hybris.structureView.TSXmlStructureViewBuilderProvider"
                order="first"/>
        <xmlStructureViewBuilderProvider
                implementation="com.intellij.idea.plugin.hybris.structureView.BSXmlStructureViewBuilderProvider"
                order="first"/>

        <!-- ####################################################################################################### -->
        <!--                                                Bean System                                              -->
        <!-- ####################################################################################################### -->

        <dom.fileMetaData rootTagName="beans" stubVersion="7"
                          implementation="com.intellij.idea.plugin.hybris.system.bean.BSDomFileDescription"/>

        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.intellij.idea.plugin.hybris.system.bean.codeInsight.daemon.BeansXmlBeanSiblingsLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.intellij.idea.plugin.hybris.system.bean.codeInsight.daemon.BeansXmlBeanAlternativeDeclarationsLineMarkerProvider"/>
        <codeInsight.lineMarkerProvider language="XML"
                                        implementationClass="com.intellij.idea.plugin.hybris.system.bean.codeInsight.daemon.BeansXmlEnumAlternativeDeclarationsLineMarkerProvider"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.bean.meta.BSMetaModelAccess"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.bean.meta.impl.BSMetaModelAccessImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.bean.meta.BSMetaModelProcessor"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.bean.meta.impl.BSMetaModelProcessorImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.bean.meta.BSMetaModelCollector"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.bean.meta.impl.BSMetaModelCollectorImpl"/>

        <projectService serviceInterface="com.intellij.idea.plugin.hybris.system.bean.meta.BSMetaModelMerger"
                        serviceImplementation="com.intellij.idea.plugin.hybris.system.bean.meta.impl.BSMetaModelMergerImpl"/>

        <projectService serviceImplementation="com.intellij.idea.plugin.hybris.startup.HybrisStandalonePluginUpdateChecker"/>

        <postStartupActivity order="first" id="hybrisProjectImport"
                             implementation="com.intellij.idea.plugin.hybris.startup.HybrisProjectImportStartupActivity"/>
        <postStartupActivity order="after hybrisProjectImport"
                             implementation="com.intellij.idea.plugin.hybris.startup.HybrisProjectStructureStartupActivity"/>
        <postStartupActivity order="after hybrisProjectImport"
                             implementation="com.intellij.idea.plugin.hybris.startup.HybrisJavaTypeRenderersStartupActivity"/>
        <backgroundPostStartupActivity
                implementation="com.intellij.idea.plugin.hybris.startup.HybrisPluginUpdateCheckerStartupActivity"/>
        <backgroundPostStartupActivity
                implementation="com.intellij.idea.plugin.hybris.startup.PreLoadSystemsStartupActivity"/>
        <backgroundPostStartupActivity
                implementation="com.intellij.idea.plugin.hybris.startup.ItemsXmlFileOpenStartupActivity"/>
    </extensions>

    <actions>
        <action id="File.yRefresh" class="com.intellij.idea.plugin.hybris.project.actions.ProjectRefreshAction"
                text="Refresh SAP Commerce Project"
                description="Re-imports the current hybris project with default values">
            <add-to-group group-id="FileMenu" anchor="after" relative-to-action="InvalidateCaches"/>
        </action>

        <group id="TSView.ToolWindow">
            <group id="TSView.ToolWindow.TreePopup">
                <action class="com.intellij.idea.plugin.hybris.toolwindow.system.type.actions.GoToDeclarationTSNodeAction"
                        use-shortcut-of="GotoDeclaration"/>
            </group>

            <group id="TSView.ToolWindow.TablePopup">
                <action class="com.intellij.idea.plugin.hybris.toolwindow.system.type.actions.GoToDeclarationTSTableAction"
                        use-shortcut-of="GotoDeclaration"/>
            </group>
        </group>

        <group id="BSView.ToolWindow">
            <group id="BSView.ToolWindow.TreePopup">
                <action class="com.intellij.idea.plugin.hybris.toolwindow.system.bean.actions.GoToDeclarationBSNodeAction"
                        use-shortcut-of="GotoDeclaration"/>
            </group>

            <group id="BSView.ToolWindow.TablePopup">
                <action class="com.intellij.idea.plugin.hybris.toolwindow.system.bean.actions.GoToDeclarationBSTableAction"
                        use-shortcut-of="GotoDeclaration"/>
            </group>
        </group>
    </actions>

</idea-plugin>
